name: Docker
on:
  push:
    branches:
      - master
      - release/*
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-beta'
      - 'v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+'
  pull_request:
    branches:
      - master

jobs:

  build:
    name: build
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: Dev image
        run: make dev-image
      - name: Prod image
        run: make prod-image
      - name: List images
        run: docker images

  deploy-latest:
    name: deploy latest
    needs: build
    runs-on: ubuntu-18.04
    if: github.event_name == 'push' && contains(github.ref, 'master')

    steps:
      - uses: actions/checkout@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Get makefile variables
        run:
          make -s export_makefile_vars >> $GITHUB_ENV

      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build multi-arch images and push
        run: |
          docker buildx build -f docker/dev/Dockerfile \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --build-arg VPP_IMG=${{ env.VPP_IMG }} \
            --build-arg VPP_VERSION=${{ env.VPP_VERSION }} \
            --build-arg VERSION=${{ env.VERSION }} \
            --build-arg COMMIT=${{ env.COMMIT }} \
            --build-arg BRANCH=${{ env.BRANCH }} \
            --build-arg BUILD_DATE=${{ env.BUILD_DATE }} \
            --build-arg SKIP_CHECK=${{ env.SKIP_CHECK }} \
            --tag ligato/dev-vpp-agent:latest \
            ${{ env.DOCKER_BUILD_ARGS }} .

          docker buildx build -f docker/prod/Dockerfile \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --build-arg DEV_IMG=${{ env.DEV_IMG || 'ligato/dev-vpp-agent' }} \
            --build-arg VPP_VERSION=${{ env.VPP_VERSION }} \
            --tag ligato/vpp-agent:latest \
            ${{ env.DOCKER_BUILD_ARGS }} docker/prod

  deploy-tag:
    name: deploy version
    needs: build
    runs-on: ubuntu-18.04
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Get makefile variables
        run:
          make -s export_makefile_vars >> $GITHUB_ENV

      - name: Get tag
        id: vars
        run: |
          echo ::set-output name=tag::$(echo ${GITHUB_REF:10})

          echo ::group::Env vars
          echo $(env | sort)
          echo ::endgroup::

      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build multi-arch images and push
        run: |
          docker buildx build -f docker/dev/Dockerfile \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --build-arg VPP_IMG=${{ env.VPP_IMG }} \
            --build-arg VPP_VERSION=${{ env.VPP_VERSION }} \
            --build-arg VERSION=${{ env.VERSION }} \
            --build-arg COMMIT=${{ env.COMMIT }} \
            --build-arg BRANCH=${{ env.BRANCH }} \
            --build-arg BUILD_DATE=${{ env.BUILD_DATE }} \
            --build-arg SKIP_CHECK=${{ env.SKIP_CHECK }} \
            --tag ligato/dev-vpp-agent:${{ steps.vars.outputs.tag }} \
            ${{ env.DOCKER_BUILD_ARGS }} .

          docker buildx build -f docker/prod/Dockerfile \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --build-arg DEV_IMG=${{ env.DEV_IMG || 'ligato/dev-vpp-agent' }} \
            --build-arg VPP_VERSION=${{ env.VPP_VERSION }} \
            --tag ligato/vpp-agent:${{ steps.vars.outputs.tag }} \
            ${{ env.DOCKER_BUILD_ARGS }} docker/prod

  deploy-release:
    name: deploy release
    needs: build
    runs-on: ubuntu-18.04
    if: github.event_name == 'push' && contains(github.ref, 'release/')

    steps:
      - uses: actions/checkout@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Get makefile variables
        run:
          make -s export_makefile_vars >> $GITHUB_ENV

      - name: Get tag
        id: vars
        run: |
          echo ::set-output name=tag::$(echo ${GITHUB_REF:11:14})

          echo ::group::Env vars
          echo $(env | sort)
          echo ::endgroup::

      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build multi-arch images and push
        run: |
          docker buildx build -f docker/dev/Dockerfile \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --build-arg VPP_IMG=${{ env.VPP_IMG }} \
            --build-arg VPP_VERSION=${{ env.VPP_VERSION }} \
            --build-arg VERSION=${{ env.VERSION }} \
            --build-arg COMMIT=${{ env.COMMIT }} \
            --build-arg BRANCH=${{ env.BRANCH }} \
            --build-arg BUILD_DATE=${{ env.BUILD_DATE }} \
            --build-arg SKIP_CHECK=${{ env.SKIP_CHECK }} \
            --tag ligato/dev-vpp-agent:${{ steps.vars.outputs.tag }} \
            ${{ env.DOCKER_BUILD_ARGS }} .

          docker buildx build -f docker/prod/Dockerfile \
            --platform linux/amd64,linux/arm64 \
            --output "type=image,push=true" \
            --build-arg DEV_IMG=${{ env.DEV_IMG || 'ligato/dev-vpp-agent' }} \
            --build-arg VPP_VERSION=${{ env.VPP_VERSION }} \
            --tag ligato/vpp-agent:${{ steps.vars.outputs.tag }} \
            ${{ env.DOCKER_BUILD_ARGS }} docker/prod